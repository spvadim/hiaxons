variables:
  PROD_VERSION: 3-2-15
  dockerTag: '$CI_BUILD_REF'
  DOCKER_REPO: registry:5000
  IMAGE_BASE_NAME: slogan
  STAGE_SERVER: 192.168.9.148
  RUNHOME: /home/gitlab-runner

# 4 FOR test
#  IMAGE_BNAME_NGINX: gitlab.tn.ru:5000/xps/axon/wrkst/frontend
#  IMAGE_BNAME_DASHB: gitlab.tn.ru:5000/xps/axon/wrkst/worker-dashboard
#  IMAGE_BNAME_FASTAPI: gitlab.tn.ru:5000/xps/axon/wrkst/backend 
#  IMAGE_BNAME_WORKER: gitlab.tn.ru:5000/xps/axon/wrkst/worker

  IMAGE_BNAME: gitlab.tn.ru:5000/xps/axon/wrkst/

#  IMAGE_SHORT_NGINX: frontend
#  IMAGE_SHORT_DASHB: worker-dashboard
#  IMAGE_SHORT_FASTAPI: backend 
#  IMAGE_SHORT_WORKER: worker 
  
  IMG_ARRAY: "frontend worker-dashboard backend worker"

#  IMAGE: $DOCKER_REPO/$IMAGE_BASE_NAME:$CI_BUILD_REF


#before_script:
#  - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
#  - mkdir -p ~/.ssh
#  - echo "$STAGE_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
#  - chmod 700 ~/.ssh/id_rsa
#  - eval "$(ssh-agent -s)"
#  - ssh-add ~/.ssh/id_rsa
#  - ssh-keyscan -t rsa $STAGE_SERVER > ~/.ssh/known_hosts
#  - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
#  - chmod 644 ~/.ssh/known_hosts


stages:
  - build
  - test
#  - r12n
#  - dp2stage

BuildImg:
  stage: build
  tags:
#    - sloganim
    - slogan6
  script:
    - docker build -t $IMAGE_BASE_NAME .
    - docker images
#    - echo OkOk

Test:
  stage: test
  tags:
    - slogan6
  script:
#    - docker run --rm -e nicname="joe" $IMAGE_BASE_NAME | grep "Hi"
    - >
      for i in ${IMG_ARRAY}; do
#        echo "$IMAGE_BNAME$i"
        echo "docker tag $IMAGE_BNAME$i $DOCKER_REPO/$i:$CI_BUILD_REF"
        echo "docker push $DOCKER_REPO/$i:$CI_BUILD_REF"
      done
    

#RecordImg:
#  variables:
#    RELEASE_IMAGE: $DOCKER_REPO/$IMAGE_BASE_NAME:latest
#  stage: r12n
#  tags:
#    - slogan6
#  script:
##    - docker tag $IMAGE_BASE_NAME $IMAGE
##    - echo $IMAGE
#    - docker tag $IMAGE_BASE_NAME $DOCKER_REPO/$IMAGE_BASE_NAME:${PROD_VERSION}_$(echo $CI_BUILD_REF | cut -c 1-8)
#    - echo $DOCKER_REPO/$IMAGE_BASE_NAME:${PROD_VERSION}_$(echo $CI_BUILD_REF | cut -c 1-8 )
##
##    - docker push $DOCKER_REPO/$IMAGE_BASE_NAME:${PROD_VERSION}_$(echo $CI_BUILD_REF | cut -c 1-8 )
##
##    - docker push $IMAGE      
##    - docker tag $IMAGE_BASE_NAME $RELEASE_IMAGE 
##    - docker push $RELEASE_IMAGE      
##
##    - echo $PROD_VERSION    
##    - echo $DOCKER_REPO/$IMAGE_BASE_NAME:${PROD_VERSION}_$(echo $CI_BUILD_REF | cut -c 1-7 )
#
##
##
#Deploy2stage:
#  variables:
#    RELEASE_IMAGE: $DOCKER_REPO/$IMAGE_BASE_NAME:latest
#  stage: dp2stage
#  tags:
#    - slogan6
#  script:
##    - echo 123
##    - echo $RELEASE_IMAGE
##    - ssh deploy@192.168.9.148  "sudo -u deploy docker pull $RELEASE_IMAGE"
##    - ssh -o StrictHostKeyChecking=no deploy@192.168.9.148  "docker pull registry:5000/slogan:latest"
#    - ssh deploy@$STAGE_SERVER  "docker pull registry:5000/slogan:latest"
##    - ansible-playbook -i $RUNHOME/ahosts $RUNHOME/get_latest.yml --extra-vars "image=$RELEASE_IMAGE"
#
#
       